{"version":3,"sources":["webpack:///./src/views/three-demo/city.vue?195d","webpack:///src/views/three-demo/city.vue","webpack:///./src/views/three-demo/city.vue?a76b","webpack:///./src/views/three-demo/city.vue","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./src/views/three-demo/city.vue?67c0","webpack:///./node_modules/three/examples/jsm/effects/OutlineEffect.js","webpack:///./src/utils/shader.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./src/views/three-demo/city.vue?6457"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","on","$event","$router","go","_v","runAniamte","staticRenderFns","data","ruleForm","views","animateId","lineList","methods","createGeometry","createEffect","geometry","effect","color","position","rotation","wireframe","tweenA","start","onComplete","Cylinder","scale","set","createPointGeo","createText","element","className","innerText","text","obj","x","y","z","scene","add","createLineFly","forEach","mesh","addLines","flyLine","positions","j","points","length","setAttribute","uniforms","iTime","size","uRange","uTotal","uColor","uColor1","transparent","depthTest","side","vertexShader","fragmentShader","createSky","objLoader","fbxLoader","cityBuffer","attributes","normal","uv","center","rotateX","Math","PI","init","$refs","background","camera","appendChild","render1","CSS3DRenderer","setSize","clientWidth","clientHeight","domElement","style","top","zIndex","controler","OrbitControls","minPolarAngle","maxPolarAngle","minDistance","maxDistance","enableDamping","DirectionalLight","plane","lineEffect","scene2","render2","outLineRender","OutlineEffect","initComposer","composer","EffectComposer","addPass","RenderPass","bloomPass","strength","radius","threshold","smaaShader","moveLightShader","initCesium","baseLayerPicker","animation","timeline","infoBox","geocoder","navigationHelpButton","Cesium","GeoJsonDataSource","load","then","viewer","dataSources","stroke","Color","fill","strokeWidth","markerSymbol","entity","entities","i","polygon","extrudedHeight","properties","height","_value","setSkyBox","loader","skyBox","rootPath","imgNameArr","format","materialArr","push","sky","moveLight","mounted","window","onresize","aspect","work","postMessage","onmessage","console","log","e","terminate","destroyed","clear","cancelAnimationFrame","component","global","DOMIterables","DOMTokenListPrototype","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","prototype","$forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","callbackfn","arguments","undefined","renderer","parameters","enabled","defaultThickness","defaultColor","fromArray","defaultAlpha","defaultKeepAlive","cache","removeThresholdCount","originalMaterials","originalOnBeforeRenders","uniformsOutline","outlineThickness","value","outlineColor","outlineAlpha","join","createMaterial","type","merge","getOutlineMaterialFromCache","originalMaterial","uuid","material","used","keepAlive","count","getOutlineMaterial","outlineMaterial","updateOutlineMaterial","isCompatible","object","hasNormals","isBufferGeometry","isMesh","setOutlineMaterial","Array","isArray","il","onBeforeRender","restoreOriginalMaterial","updateUniforms","outlineParameters","userData","opacity","thickness","alpha","displacementMap","displacementScale","displacementBias","name","fog","toneMapped","premultipliedAlpha","visible","clippingPlanes","clipping","clipIntersection","clipShadows","version","cleanupCache","keys","Object","key","renderTarget","forceClear","warn","setRenderTarget","currentAutoClear","autoClear","renderOutline","currentSceneAutoUpdate","autoUpdate","currentSceneBackground","currentShadowMapEnabled","shadowMap","traverse","depth","stencil","getPixelRatio","setPixelRatio","getSize","target","width","updateStyle","setViewport","setScissor","setScissorTest","boolean","shader1","shader2","fails","METHOD_NAME","argument","method","call"],"mappings":"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","file":"static/js/chunk-ffabedc0.fcb33402.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('div',{ref:\"views\",attrs:{\"id\":\"home-view\"}}),_c('div',{staticClass:\"back\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.$router.go(-1)}}},[_vm._v(\"退 出\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.runAniamte}},[_vm._v(\"转 动\")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"home\">\r\n    <div id=\"home-view\" ref=\"views\"></div>\r\n    <div class=\"back\">\r\n        <el-button @click=\"$router.go(-1)\" type=\"primary\">退 出</el-button>\r\n        <el-button @click=\"runAniamte\" type=\"primary\">转 动</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls' // 控制器\r\nimport { CSS3DRenderer, CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer.js';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer' \r\n// import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass' \r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass' \r\nimport { SMAAEdgesShader, SMAAWeightsShader, SMAABlendShader } from 'three/examples/jsm/shaders/SMAAShader' \r\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass' \r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass' \r\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js' \r\nimport { OutlineEffect } from 'three/examples/jsm/effects/OutlineEffect'\r\nimport TWEEN from 'tween'\r\nimport Effect from '@/utils/effect.js'\r\nimport Shader from '@/utils/shader.js'\r\nconst vertexShader = `\r\n    varying vec3 vPosition;\r\n    varying vec2 vUv;\r\n    void main() { \r\n        vUv = uv; \r\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n        gl_Position = projectionMatrix * mvPosition;\r\n        vPosition = position;\r\n    }\r\n`;\r\nlet scene, camera, render, render1, controler, composer, moveLightShader, clock = new THREE.Clock();\r\nlet mixer, actions,scene2,render2\r\nvar type = 'add', time;\r\nexport default {\r\n  data() {\r\n    return {\r\n      ruleForm: {},\r\n      views: null,\r\n      animateId: null,\r\n      lineList: [\r\n        {start: {x: -80, y: 0, z: -30}, end: {x: 10, y: 0, z: -30}},\r\n        {start: {x: 200, y: 0, z: 60}, end: {x: 10, y: 0, z: -30}},\r\n        {start: {x: -110, y: 0, z: 120}, end: {x: 10, y: 0, z: -30}},\r\n        {start: {x: -110, y: 0, z: -120}, end: {x: 10, y: 0, z: -30}},\r\n        {start: {x: 20, y: 0, z: 220}, end: {x: 10, y: 0, z: -30}}\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    createGeometry({geometry, position,rotation, effect, color, color1, wireframe}) {\r\n        position = position || new THREE.Vector3(0,0,0)\r\n        rotation = rotation || new THREE.Vector3(0,0,0)\r\n        let material = null\r\n        if(!!effect) {\r\n          material = new THREE.ShaderMaterial({\r\n                uniforms: {\r\n                    iTime: {\r\n                        value: 0\r\n                    },\r\n                    time: {\r\n                      value: 0\r\n                    },\r\n                    color: { value: color || new THREE.Color(0xff0000) },\r\n                    color1: { value: color1 || new THREE.Color(0x00ffff) },\r\n                    iResolution: {\r\n                        value: new THREE.Vector2(800, 800)\r\n                    },\r\n                    map: {\r\n                      value: new THREE.TextureLoader().load('./images/smokeparticle.png')\r\n                    }\r\n                },\r\n                side: 2,\r\n                depthWrite: true,\r\n                transparent: true,\r\n                depthTest: false,\r\n                wireframe: wireframe || false,\r\n                blending: THREE.AdditiveBlending,\r\n                vertexShader: vertexShader,\r\n                fragmentShader: effect()\r\n          })\r\n        }else{\r\n           material = new THREE.MeshBasicMaterial({\r\n                color: color || new THREE.Color(0x00ffff),\r\n                side: 2,\r\n                transparent: true,\r\n                depthTest: false,\r\n                wireframe: wireframe || false,\r\n                blending: THREE.AdditiveBlending,\r\n          })\r\n        }\r\n        let mesh = new THREE.Mesh(geometry, material);\r\n        mesh.position.set(position.x,position.y,position.z )\r\n        mesh.rotation.set(rotation.x,rotation.y,rotation.z)\r\n        scene.add(mesh)\r\n        return mesh\r\n    },\r\n    createEffect() {\r\n      const circle1 = this.createGeometry({\r\n        geometry: new THREE.CircleGeometry(30, 32, 32),\r\n        effect: Effect.effect44,\r\n        color: new THREE.Color(0xff0000),\r\n        position: {x: -200, y: 0, z: 60},\r\n        rotation: {x: Math.PI/2, y: 0, z: 0 }\r\n      })\r\n\r\n      const circle2 = this.createGeometry({\r\n        geometry: new THREE.CircleGeometry(25, 32, 32),\r\n        effect: Effect.effect35,\r\n        color: new THREE.Color(0xff00ff),\r\n        position: {x: 10, y: 0, z: -30},\r\n        rotation: {x: Math.PI/2, y: 0, z: 0 },\r\n        wireframe: true\r\n      })\r\n\r\n      const sphere = this.createGeometry({\r\n        geometry: new THREE.SphereGeometry(20, 32, 32, 0, Math.PI*2, 0, Math.PI/2),\r\n        effect: Effect.effect39,\r\n        color: new THREE.Color(0x00ffff),\r\n        position: {x: -80, y: 0, z: -30},\r\n        rotation: {x: 0, y: 0, z: 0 }\r\n      })\r\n      \r\n      const Cylinder = this.createGeometry({\r\n        geometry: new THREE.CylinderBufferGeometry( 30, 30, 20, 32 , 32, true),\r\n        effect: Effect.effect42,\r\n        color: new THREE.Color(0xffff00),\r\n        position: {x: -110, y: 10, z: 120},\r\n        rotation: {x: 0, y: 0, z: 0 }\r\n      })\r\n\r\n      let tweenA = new TWEEN.Tween(Cylinder.scale).to({x: 2, y: 1, z: 2}, 2000)\r\n      tweenA.start()\r\n      tweenA.onComplete(() => {\r\n        Cylinder.scale.set(0.1, 1, 0.1)\r\n        tweenA.start()\r\n      })\r\n    },\r\n    createPointGeo() {\r\n        const geometryList = [\r\n          { \r\n            geometry: new THREE.OctahedronGeometry( 3 ),\r\n            color: new THREE.Color(0xffff00),\r\n            position: {x: 10, y: 15, z: 120},\r\n            time: 1000,\r\n            text: '侯家塘'\r\n          },\r\n          { \r\n            geometry: new THREE.OctahedronGeometry( 5 ),\r\n            color: new THREE.Color(0xff0000),\r\n            position: {x: 100, y: 15, z: 180},\r\n            time: 1500,\r\n            text: '湘江中路'\r\n          },\r\n          { \r\n            geometry: new THREE.CylinderBufferGeometry( 5, 0, 10, 4 , 1),\r\n            color: new THREE.Color(0xff00ff),\r\n            position: {x: -20, y: 15, z: -120},\r\n            time: 1200,\r\n            text: '五一广场'\r\n          },\r\n          { \r\n            geometry: new THREE.CylinderBufferGeometry( 5, 0, 10, 4 , 1),\r\n            color: new THREE.Color(0xddff00),\r\n            position: {x: -100, y: 15, z: 20},\r\n            time: 1000,\r\n            text: '黄兴广场'\r\n          },\r\n          { \r\n            geometry: new THREE.CylinderBufferGeometry( 5, 0, 10, 4 , 1),\r\n            color: new THREE.Color(0x00ff00),\r\n            position: {x: 150, y: 15, z: 30},\r\n            time: 800,\r\n            text: '橘子洲'\r\n          }\r\n        ]\r\n        geometryList.forEach(item => {\r\n          const { geometry, color, position, time, wireframe, rotation, text} = item\r\n          // 八面体\r\n          const eightGeo = this.createGeometry({\r\n            geometry,\r\n            color,\r\n            position,\r\n            wireframe,\r\n            rotation\r\n          })\r\n          let T1 = new TWEEN.Tween(eightGeo.position).to({ y: 15 }, time)\r\n          let T2 = new TWEEN.Tween(eightGeo.position).to({ y: 20 }, time)\r\n          T1.start()\r\n          T1.chain(T2)\r\n          T2.chain(T1)\r\n          \r\n          let T3 = new TWEEN.Tween(eightGeo.rotation).to({ y: Math.PI*2 }, time*5)\r\n          let T4 = new TWEEN.Tween(eightGeo.rotation).to({ y: 0 }, time*5)\r\n          T3.start()\r\n          T3.chain(T4)\r\n          T4.chain(T3)\r\n\r\n          this.createText(text, position)\r\n        })\r\n        \r\n    },\r\n    // 文本\r\n    createText(text, position) {\r\n      let element = document.createElement('div')\r\n      element.className = 'info'\r\n      element.innerText = text\r\n      let obj = new CSS3DObject(element)\r\n      obj.position.set(position.x, position.y + 10, position.z)\r\n      obj.scale.set(0.5, 0.5, 0.5)\r\n      scene.add(obj)\r\n    },\r\n    createLineFly() {\r\n      // 飞线\r\n      this.lineList.forEach( (val, index) => {\r\n        let start = new THREE.Vector3(val.start.x, val.start.y, val.start.z )\r\n        let end = new THREE.Vector3(val.end.x, val.end.y, val.end.z )\r\n        const { curve, mesh } = this.addLines(start, end)\r\n        this.flyLine(curve) \r\n        scene.add(mesh)\r\n        // var geometry = new THREE.TubeGeometry( curve, 32, 0.25, 4, false );\r\n        // var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n        // var mesh1 = new THREE.Mesh( geometry, material );\r\n        // scene.add( mesh1 );\r\n      })\r\n    },\r\n    // 曲线\r\n    addLines( v0, v3 ) {\r\n        var path = new THREE.LineCurve3(v0, v3)\r\n        var p = path.getPoints(120)\r\n        var d = v0.distanceTo( v3 )/3\r\n        var v1 = new THREE.Vector3( p[40].x, p[40].y + d, p[40].z )\r\n        var v2 = new THREE.Vector3( p[80].x, p[80].y + d, p[80].z )\r\n\r\n        // 绘制三维三次贝赛尔曲线\r\n        var curve = new THREE.CubicBezierCurve3( v0, v1, v2, v3 );\r\n        var geometry = new THREE.BufferGeometry();\r\n        var points = curve.getPoints( 150 );\r\n        var positions = [];\r\n        var colors = [], index = [];\r\n        var color = new THREE.Color();\r\n        /**\r\n         * HSL中使用渐变\r\n         * h — hue value between 0.0 and 1.0\r\n         * s — 饱和度 between 0.0 and 1.0\r\n         * l — 亮度 between 0.0 and 1.0\r\n         */\r\n        for (var j = 0; j < points.length; j ++) {\r\n            // color.setHSL( .31666+j*0.005,0.7, 0.7); //绿色\r\n            color.setHSL( .81666+j*0.0025, 0.88, 0.88); //粉色\r\n            colors.push( color.r, color.g, color.b );\r\n            positions.push( points[j].x, points[j].y, points[j].z );\r\n            index.push(j/(points.length - 1))\r\n        }\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3))\r\n        geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3))\r\n        geometry.setAttribute('index', new THREE.Float32BufferAttribute(index, 1))\r\n        var matLine = new THREE.LineBasicMaterial( {\r\n            vertexColors: true,\r\n            transparent: true\r\n        } );\r\n        return {\r\n          curve,\r\n          mesh: new THREE.Line( geometry, matLine )\r\n        }\r\n    },\r\n    // 路径飞线\r\n    flyLine(curve) {\r\n      var positions = [], index = [], current = [];\r\n      let points = curve.getPoints(5000)\r\n      const geometry = new THREE.BufferGeometry().setFromPoints(points)\r\n\r\n      for (var j = 0; j < points.length; j ++) {\r\n          positions.push( points[j].x, points[j].y, points[j].z );\r\n          index.push(j/(points.length - 1))\r\n          current.push(j)\r\n      }\r\n      geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3))\r\n      geometry.setAttribute('index', new THREE.Float32BufferAttribute(index, 1))\r\n      geometry.setAttribute('current', new THREE.Float32BufferAttribute(current, 1))\r\n      const material = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n          iTime: { value: 0 },\r\n          size: { value: 200 },\r\n          uRange: { value: 400 },\r\n          uTotal: { value: points.length},\r\n          uColor: { value: new THREE.Color(0x00ffff) },\r\n          uColor1: { value: new THREE.Color(0x00ffff) }\r\n        },\r\n        transparent: true,\r\n        depthTest: true,\r\n        side: 2,\r\n        vertexShader: `\r\n        attribute float index;\r\n        attribute float current;\r\n        uniform float size;\r\n        uniform vec3 uColor;\r\n        uniform vec3 uColor1;\r\n        uniform float uRange;\r\n        uniform float uTotal;\r\n        uniform float iTime;\r\n        varying vec3 vColor;\r\n        varying float vOpacity;\r\n        void main() {\r\n           // 需要当前显示的索引  \r\n            float showNumber = uTotal * mod(iTime/2.0, 1.0);\r\n            float s = size;\r\n            if (showNumber > current && showNumber < current + uRange) {\r\n                vOpacity = 1.0;\r\n                s *= (current + uRange - showNumber) / uRange;\r\n            } else {\r\n                vOpacity = 0.0;\r\n                s = 0.0;\r\n            }\r\n            // 顶点着色器计算后的Position\r\n            // mix 混淆颜色\r\n            vColor = mix(uColor, uColor1, index);\r\n            vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n            gl_Position = projectionMatrix * mvPosition; \r\n            // 大小\r\n            gl_PointSize = s* 5.0 / (-mvPosition.z);\r\n        }`,\r\n        fragmentShader: `\r\n        uniform vec3 uColor;\r\n        uniform vec3 uColor1;\r\n        varying vec3 vColor; \r\n        varying float vOpacity; \r\n        void main() {\r\n            gl_FragColor = vec4(vColor, vOpacity);\r\n        }`\r\n      })\r\n      const mesh = new THREE.Points(geometry, material)\r\n      scene.add(mesh)\r\n    },\r\n    // 天空盒\r\n    createSky() {\r\n        const sky = new THREE.Mesh(\r\n          new THREE.SphereGeometry(8000, 64, 64),\r\n          new THREE.MeshBasicMaterial({\r\n            color: 0xcccccc,\r\n            side: THREE.BackSide,\r\n            map: new THREE.TextureLoader().load('./images/sky.jpg')\r\n          })\r\n        )\r\n        scene.add(sky)\r\n    },\r\n    objLoader(path, fileName, mtlName) {\r\n        let mtlLoader = new MTLLoader()\r\n        let objLoader = new OBJLoader()\r\n        mtlLoader.setPath(path)\r\n        mtlLoader.load(mtlName, material => {\r\n            objLoader.setMaterials( material )\r\n            objLoader.setPath(path)\r\n            objLoader.load(fileName, (obj) => {\r\n                obj.children[0].material.wireframe = false\r\n                scene.add(obj)\r\n            }) \r\n        })\r\n    },\r\n    fbxLoader(filePath) {\r\n        let fbxLoader = new FBXLoader()\r\n        fbxLoader.load(filePath, obj => {\r\n            mixer = new THREE.AnimationMixer(obj)\r\n            actions = mixer.clipAction(obj.animations[0]);\r\n            actions.play()\r\n            obj.scale.set(0.65,0.65,0.65)\r\n            scene.add(obj)\r\n        })\r\n    },\r\n    cityBuffer({position, normal, uv}) {\r\n      const geometry = new THREE.BufferGeometry()\r\n      geometry.attributes.position = new THREE.Float32BufferAttribute(position.array, 3)\r\n      geometry.attributes.normal = new THREE.Float32BufferAttribute(normal.array, 3)\r\n      geometry.attributes.uv = new THREE.Float32BufferAttribute(uv.array, 2)\r\n      geometry.center()\r\n      const mesh = new THREE.Mesh(geometry, new THREE.ShaderMaterial({\r\n          uniforms: {\r\n            iTime: { value: 0 },\r\n            time: { value: 0 },\r\n            color: { value: new THREE.Color(0x00ffff) },\r\n            color1: { value: new THREE.Color(0x0b1060) },\r\n          },\r\n          side: 2,\r\n          depthWrite: true,\r\n          transparent: false,\r\n          depthTest: true,\r\n          vertexShader: vertexShader,\r\n          fragmentShader: Effect.effect45()\r\n      }))\r\n      mesh.rotateX(-Math.PI/2)\r\n      mesh.scale.set(3000,3000,3000)\r\n      mesh.position.y = 10\r\n      scene.add(mesh)\r\n      this.createEffect()\r\n    },\r\n    init() {\r\n      this.views = this.$refs.views\r\n      scene = new THREE.Scene()\r\n      scene.background = new THREE.Color(0x000f12)\r\n      // scene.fog = new THREE.FogExp2(new THREE.Color(0x404040))\r\n      camera = new THREE.PerspectiveCamera(75, this.views.clientWidth/this.views.clientHeight, 1, 10000)\r\n      camera.position.set(0, 30, 290);\r\n      render = new THREE.WebGLRenderer({antialias: true, alpha: true}) //antialias: true, \r\n      render.setSize(this.views.clientWidth, this.views.clientHeight)\r\n      this.views.appendChild(render.domElement)\r\n\r\n      render1 = new CSS3DRenderer({alpha: true}) //antialias: true, \r\n      render1.setSize(this.views.clientWidth, this.views.clientHeight)\r\n      this.views.appendChild(render1.domElement)\r\n      render1.domElement.style.position = 'absolute'\r\n      render1.domElement.style.top = 0\r\n      render1.domElement.style.zIndex = 2\r\n\r\n      // controler = new OrbitControls(camera, render.domElement)\r\n      controler = new OrbitControls(camera, render1.domElement)\r\n      // controler.autoRotate = true\r\n      // controler.autoRotateSpeed = 5\r\n      controler.minPolarAngle = Math.PI/3; \r\n      controler.maxPolarAngle = Math.PI/2.1;\r\n      controler.minDistance = 1;\r\n      controler.maxDistance = 400;\r\n      controler.enableDamping = true\r\n      let AmbientLight = new THREE.AmbientLight( 0x404040);\r\n      scene.add( AmbientLight );\r\n      var DirectionalLight = new THREE.DirectionalLight( 0xffffff);\r\n      DirectionalLight.position.set( 0, 850, 300 );\r\n      scene.add( DirectionalLight );\r\n\r\n      let geo = new THREE.PlaneGeometry(3000, 3000, 64, 64)\r\n      let plane = new THREE.Mesh(geo, new THREE.MeshPhongMaterial({\r\n         color: 0x001060,\r\n         transparent: true,\r\n         opacity: 0.3\r\n      }))\r\n      plane.rotateX(-Math.PI/2)\r\n      plane.position.y = -1.8\r\n      scene.add(plane)\r\n      // this.lineEffect()\r\n    },\r\n    lineEffect() {\r\n      scene2 = new THREE.Scene()\r\n      render2 = new THREE.WebGLRenderer({antialias: true, alpha: true}) //antialias: true, \r\n      render2.setSize(this.views.clientWidth, this.views.clientHeight)\r\n      outLineRender = new OutlineEffect(render2, {defaultColor: [0, 1.0, 1.0]})\r\n      render2.domElement.style.position = 'absolute'\r\n      render2.domElement.style.top = 0\r\n      render2.domElement.style.zIndex = 1\r\n      this.views.appendChild(render2.domElement)\r\n      \r\n      let AmbientLight = new THREE.AmbientLight( 0x404040);\r\n      scene2.add( AmbientLight );\r\n      var DirectionalLight = new THREE.DirectionalLight( 0xffffff);\r\n      DirectionalLight.position.set( 0, 850, 300 );\r\n      scene2.add( DirectionalLight );\r\n    },\r\n    initComposer() {\r\n      composer = new EffectComposer(render)\r\n      composer.addPass(new RenderPass(scene, camera))\r\n\r\n      let bloomPass = new UnrealBloomPass()\r\n      composer.addPass(bloomPass)\r\n\r\n      bloomPass.strength = 0.8\r\n      bloomPass.radius = 0.6\r\n      bloomPass.threshold = 0.3\r\n\r\n      let smaaShader = new SMAAPass(SMAAEdgesShader)\r\n      composer.addPass(smaaShader)\r\n\r\n      moveLightShader = new THREE.ShaderMaterial({\r\n            uniforms: {\r\n                iTime: {\r\n                    value: 0\r\n                },\r\n                tDiffuse: {type: \"t\", value: 0},\r\n                color: { value: new THREE.Color(0xffffff) },\r\n                iResolution: {\r\n                    value: new THREE.Vector2(1800, 1800)\r\n                }\r\n            },\r\n            side: 2,\r\n            depthWrite: false,\r\n            transparent: true,\r\n            vertexShader: vertexShader,\r\n            fragmentShader: Shader.shader1()\r\n      })\r\n      // let lightShader = new ShaderPass(moveLightShader)\r\n      // composer.addPass(lightShader)\r\n      // \r\n    },\r\n    initCesium() {\r\n      const viewer = new Cesium.Viewer(\"home-view\",{\r\n        baseLayerPicker: false,  // 影像切换\r\n        animation: false,  //是否显示动画控件\r\n        timeline: false, //是否显示时间线控件\r\n        infoBox: false, //是否显示点击要素之后显示的信息\r\n        geocoder: false, //是否显示地名查找控件\r\n        navigationHelpButton: false, //是否显示帮助信息控件\r\n      });\r\n      Cesium.GeoJsonDataSource.load('cs_city.json').then(data => {\r\n        viewer.dataSources.add(data, {\r\n          stroke: new Cesium.Color(0.0, 0.0, 0.0, 1.0),\r\n          fill: new Cesium.Color(1.0, 1.0, 1.0, 1.0),\r\n          strokeWidth: 3,\r\n          markerSymbol: '?'\r\n        })\r\n        const entities = data.entities.values\r\n        for(let i = 0; i < entities.length; i++) {\r\n          var entity = entities[i]\r\n          entity.polygon.extrudedHeight = entity.properties.height._value\r\n        }\r\n      })\r\n    },\r\n    runAniamte() {\r\n        controler.autoRotate = !controler.autoRotate\r\n    },\r\n    setSkyBox(type) {\r\n      var loader = new THREE.TextureLoader();\r\n      var skyBox = new THREE.BoxGeometry(8000,8000,8000);\r\n      var rootPath = './images/';\r\n      var imgNameArr = ['_posx','_negx','_posy','_negy','_posz','_negz'];\r\n      var format = '.jpg';\r\n      var materialArr = [];\r\n      for(let i=0; i< imgNameArr.length;i++) {\r\n        materialArr.push(new THREE.MeshBasicMaterial({map:loader.load(rootPath+type+imgNameArr[i]+format),side: THREE.DoubleSide}));\r\n      }\r\n      const sky = new THREE.Mesh(skyBox, materialArr);\r\n      scene.add(sky);\r\n    },\r\n    moveLight() {\r\n      time = moveLightShader.uniforms[ 'iTime' ].value;\r\n        if(time > 1.2){\r\n            type = 'reduce'\r\n        }else if(time < -1.2){\r\n            type = 'add';\r\n        }\r\n        if(type =='add'){\r\n            moveLightShader.uniforms[ 'iTime' ].value += 0.008;\r\n        }else{\r\n            moveLightShader.uniforms[ 'iTime' ].value -= 0.008;\r\n        }\r\n    },\r\n    animation() {\r\n        let delta = clock.getDelta()\r\n        controler.update(delta)\r\n        composer.render(scene, camera)\r\n        render1.render(scene, camera)\r\n        // outLineRender.render(scene2, camera)\r\n        TWEEN.update()\r\n        if(mixer) mixer.update(delta)\r\n        const elapsedTime = clock.getElapsedTime()\r\n        // Update passes\r\n        scene.traverse((child) => {\r\n            if(child.material && child.material.uniforms){\r\n\r\n                child.material.uniforms.iTime.value = elapsedTime\r\n                \r\n                if(!!child.material.uniforms.time) {\r\n                  if(child.material.uniforms.time.value > 1.0) {\r\n                    child.material.uniforms.time.value = 0.0;\r\n                  }\r\n                  child.material.uniforms.time.value += 0.01;\r\n                }\r\n            }\r\n            \r\n        })\r\n        // this.moveLight()\r\n        this.animateId = requestAnimationFrame(this.animation);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init()\r\n    this.initComposer()\r\n    this.animation()\r\n    this.createSky()\r\n    // this.loadGeoJson()\r\n    this.createLineFly()\r\n    this.createPointGeo()\r\n    this.setSkyBox('dark')\r\n    // this.initCesium()\r\n    window.onresize = () => {\r\n      render.setSize(this.views.clientWidth, this.views.clientHeight)\r\n      render1.setSize(this.views.clientWidth, this.views.clientHeight)\r\n      camera.aspect = this.views.clientWidth / this.views.clientHeight//相机重置可视范围\r\n      camera.updateProjectionMatrix();\r\n    }\r\n    let work = new Worker('./js/work.js')\r\n    work.postMessage('加载模型')\r\n    work.onmessage = (e) => {\r\n      console.log(e)\r\n      this.cityBuffer(e.data)\r\n      work.terminate();\r\n    }\r\n  },\r\n  destroyed() {\r\n    scene.clear()\r\n    cancelAnimationFrame(this.animateId)\r\n    render.dispose()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home {\r\n  width: 100vw;\r\n  height: 100vh;\r\n} \r\n#home-view {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  /* background: #888; */\r\n}\r\n.effect-list {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  color: #fff;\r\n  overflow: auto;\r\n  height: 100vh;\r\n}\r\nli > button {\r\n  padding: 2px 5px;\r\n  font-size: 14px;\r\n  margin-bottom: 2px;\r\n}\r\n.back, .run {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 50%;\r\n  z-index: 99;\r\n  transform: translateX(50%);\r\n  display: flex;\r\n}\r\n</style>\r\n\r\n<style>\r\n.info {\r\n  color: #ec0d0d;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  box-shadow: 0 0 5px 2px inset rgb(7, 189, 235)\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./city.vue?vue&type=template&id=d595bda8&scoped=true&\"\nimport script from \"./city.vue?vue&type=script&lang=js&\"\nexport * from \"./city.vue?vue&type=script&lang=js&\"\nimport style0 from \"./city.vue?vue&type=style&index=0&id=d595bda8&scoped=true&lang=css&\"\nimport style1 from \"./city.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d595bda8\",\n  null\n  \n)\n\nexport default component.exports","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=style&index=0&id=d595bda8&scoped=true&lang=css&\"","import {\n\tBackSide,\n\tColor,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils\n} from 'three';\n\n/**\n * Reference: https://en.wikipedia.org/wiki/Cel_shading\n *\n * API\n *\n * 1. Traditional\n *\n * const effect = new OutlineEffect( renderer );\n *\n * function render() {\n *\n * \teffect.render( scene, camera );\n *\n * }\n *\n * 2. VR compatible\n *\n * const effect = new OutlineEffect( renderer );\n * let renderingOutline = false;\n *\n * scene.onAfterRender = function () {\n *\n * \tif ( renderingOutline ) return;\n *\n * \trenderingOutline = true;\n *\n * \teffect.renderOutline( scene, camera );\n *\n * \trenderingOutline = false;\n *\n * };\n *\n * function render() {\n *\n * \trenderer.render( scene, camera );\n *\n * }\n *\n * // How to set default outline parameters\n * new OutlineEffect( renderer, {\n * \tdefaultThickness: 0.01,\n * \tdefaultColor: [ 0, 0, 0 ],\n * \tdefaultAlpha: 0.8,\n * \tdefaultKeepAlive: true // keeps outline material in cache even if material is removed from scene\n * } );\n *\n * // How to set outline parameters for each material\n * material.userData.outlineParameters = {\n * \tthickness: 0.01,\n * \tcolor: [ 0, 0, 0 ]\n * \talpha: 0.8,\n * \tvisible: true,\n * \tkeepAlive: true\n * };\n */\n\nclass OutlineEffect {\n\n\tconstructor( renderer, parameters = {} ) {\n\n\t\tthis.enabled = true;\n\n\t\tconst defaultThickness = parameters.defaultThickness !== undefined ? parameters.defaultThickness : 0.003;\n\t\tconst defaultColor = new Color().fromArray( parameters.defaultColor !== undefined ? parameters.defaultColor : [ 0, 0, 0 ] );\n\t\tconst defaultAlpha = parameters.defaultAlpha !== undefined ? parameters.defaultAlpha : 1.0;\n\t\tconst defaultKeepAlive = parameters.defaultKeepAlive !== undefined ? parameters.defaultKeepAlive : false;\n\n\t\t// object.material.uuid -> outlineMaterial or\n\t\t// object.material[ n ].uuid -> outlineMaterial\n\t\t// save at the outline material creation and release\n\t\t// if it's unused removeThresholdCount frames\n\t\t// unless keepAlive is true.\n\t\tconst cache = {};\n\n\t\tconst removeThresholdCount = 60;\n\n\t\t// outlineMaterial.uuid -> object.material or\n\t\t// outlineMaterial.uuid -> object.material[ n ]\n\t\t// save before render and release after render.\n\t\tconst originalMaterials = {};\n\n\t\t// object.uuid -> originalOnBeforeRender\n\t\t// save before render and release after render.\n\t\tconst originalOnBeforeRenders = {};\n\n\t\t//this.cache = cache;  // for debug\n\n\t\tconst uniformsOutline = {\n\t\t\toutlineThickness: { value: defaultThickness },\n\t\t\toutlineColor: { value: defaultColor },\n\t\t\toutlineAlpha: { value: defaultAlpha }\n\t\t};\n\n\t\tconst vertexShader = [\n\t\t\t'#include <common>',\n\t\t\t'#include <uv_pars_vertex>',\n\t\t\t'#include <displacementmap_pars_vertex>',\n\t\t\t'#include <fog_pars_vertex>',\n\t\t\t'#include <morphtarget_pars_vertex>',\n\t\t\t'#include <skinning_pars_vertex>',\n\t\t\t'#include <logdepthbuf_pars_vertex>',\n\t\t\t'#include <clipping_planes_pars_vertex>',\n\n\t\t\t'uniform float outlineThickness;',\n\n\t\t\t'vec4 calculateOutline( vec4 pos, vec3 normal, vec4 skinned ) {',\n\t\t\t'\tfloat thickness = outlineThickness;',\n\t\t\t'\tconst float ratio = 1.0;', // TODO: support outline thickness ratio for each vertex\n\t\t\t'\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + normal, 1.0 );',\n\t\t\t// NOTE: subtract pos2 from pos because BackSide objectNormal is negative\n\t\t\t'\tvec4 norm = normalize( pos - pos2 );',\n\t\t\t'\treturn pos + norm * thickness * pos.w * ratio;',\n\t\t\t'}',\n\n\t\t\t'void main() {',\n\n\t\t\t'\t#include <uv_vertex>',\n\n\t\t\t'\t#include <beginnormal_vertex>',\n\t\t\t'\t#include <morphnormal_vertex>',\n\t\t\t'\t#include <skinbase_vertex>',\n\t\t\t'\t#include <skinnormal_vertex>',\n\n\t\t\t'\t#include <begin_vertex>',\n\t\t\t'\t#include <morphtarget_vertex>',\n\t\t\t'\t#include <skinning_vertex>',\n\t\t\t'\t#include <displacementmap_vertex>',\n\t\t\t'\t#include <project_vertex>',\n\n\t\t\t'\tvec3 outlineNormal = - objectNormal;', // the outline material is always rendered with BackSide\n\n\t\t\t'\tgl_Position = calculateOutline( gl_Position, outlineNormal, vec4( transformed, 1.0 ) );',\n\n\t\t\t'\t#include <logdepthbuf_vertex>',\n\t\t\t'\t#include <clipping_planes_vertex>',\n\t\t\t'\t#include <fog_vertex>',\n\n\t\t\t'}',\n\n\t\t].join( '\\n' );\n\n\t\tconst fragmentShader = [\n\n\t\t\t'#include <common>',\n\t\t\t'#include <fog_pars_fragment>',\n\t\t\t'#include <logdepthbuf_pars_fragment>',\n\t\t\t'#include <clipping_planes_pars_fragment>',\n\n\t\t\t'uniform vec3 outlineColor;',\n\t\t\t'uniform float outlineAlpha;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\t#include <clipping_planes_fragment>',\n\t\t\t'\t#include <logdepthbuf_fragment>',\n\n\t\t\t'\tgl_FragColor = vec4( outlineColor, outlineAlpha );',\n\n\t\t\t'\t#include <tonemapping_fragment>',\n\t\t\t'\t#include <encodings_fragment>',\n\t\t\t'\t#include <fog_fragment>',\n\t\t\t'\t#include <premultiplied_alpha_fragment>',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' );\n\n\t\tfunction createMaterial() {\n\n\t\t\treturn new ShaderMaterial( {\n\t\t\t\ttype: 'OutlineEffect',\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib[ 'fog' ],\n\t\t\t\t\tUniformsLib[ 'displacementmap' ],\n\t\t\t\t\tuniformsOutline\n\t\t\t\t] ),\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tside: BackSide\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction getOutlineMaterialFromCache( originalMaterial ) {\n\n\t\t\tlet data = cache[ originalMaterial.uuid ];\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tdata = {\n\t\t\t\t\tmaterial: createMaterial(),\n\t\t\t\t\tused: true,\n\t\t\t\t\tkeepAlive: defaultKeepAlive,\n\t\t\t\t\tcount: 0\n\t\t\t\t};\n\n\t\t\t\tcache[ originalMaterial.uuid ] = data;\n\n\t\t\t}\n\n\t\t\tdata.used = true;\n\n\t\t\treturn data.material;\n\n\t\t}\n\n\t\tfunction getOutlineMaterial( originalMaterial ) {\n\n\t\t\tconst outlineMaterial = getOutlineMaterialFromCache( originalMaterial );\n\n\t\t\toriginalMaterials[ outlineMaterial.uuid ] = originalMaterial;\n\n\t\t\tupdateOutlineMaterial( outlineMaterial, originalMaterial );\n\n\t\t\treturn outlineMaterial;\n\n\t\t}\n\n\t\tfunction isCompatible( object ) {\n\n\t\t\tconst geometry = object.geometry;\n\t\t\tlet hasNormals = false;\n\n\t\t\tif ( object.geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\thasNormals = geometry.attributes.normal !== undefined;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thasNormals = true; // the renderer always produces a normal attribute for Geometry\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn ( object.isMesh === true && object.material !== undefined && hasNormals === true );\n\n\t\t}\n\n\t\tfunction setOutlineMaterial( object ) {\n\n\t\t\tif ( isCompatible( object ) === false ) return;\n\n\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = object.material.length; i < il; i ++ ) {\n\n\t\t\t\t\tobject.material[ i ] = getOutlineMaterial( object.material[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = getOutlineMaterial( object.material );\n\n\t\t\t}\n\n\t\t\toriginalOnBeforeRenders[ object.uuid ] = object.onBeforeRender;\n\t\t\tobject.onBeforeRender = onBeforeRender;\n\n\t\t}\n\n\t\tfunction restoreOriginalMaterial( object ) {\n\n\t\t\tif ( isCompatible( object ) === false ) return;\n\n\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = object.material.length; i < il; i ++ ) {\n\n\t\t\t\t\tobject.material[ i ] = originalMaterials[ object.material[ i ].uuid ];\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = originalMaterials[ object.material.uuid ];\n\n\t\t\t}\n\n\t\t\tobject.onBeforeRender = originalOnBeforeRenders[ object.uuid ];\n\n\t\t}\n\n\t\tfunction onBeforeRender( renderer, scene, camera, geometry, material ) {\n\n\t\t\tconst originalMaterial = originalMaterials[ material.uuid ];\n\n\t\t\t// just in case\n\t\t\tif ( originalMaterial === undefined ) return;\n\n\t\t\tupdateUniforms( material, originalMaterial );\n\n\t\t}\n\n\t\tfunction updateUniforms( material, originalMaterial ) {\n\n\t\t\tconst outlineParameters = originalMaterial.userData.outlineParameters;\n\n\t\t\tmaterial.uniforms.outlineAlpha.value = originalMaterial.opacity;\n\n\t\t\tif ( outlineParameters !== undefined ) {\n\n\t\t\t\tif ( outlineParameters.thickness !== undefined ) material.uniforms.outlineThickness.value = outlineParameters.thickness;\n\t\t\t\tif ( outlineParameters.color !== undefined ) material.uniforms.outlineColor.value.fromArray( outlineParameters.color );\n\t\t\t\tif ( outlineParameters.alpha !== undefined ) material.uniforms.outlineAlpha.value = outlineParameters.alpha;\n\n\t\t\t}\n\n\t\t\tif ( originalMaterial.displacementMap ) {\n\n\t\t\t\tmaterial.uniforms.displacementMap.value = originalMaterial.displacementMap;\n\t\t\t\tmaterial.uniforms.displacementScale.value = originalMaterial.displacementScale;\n\t\t\t\tmaterial.uniforms.displacementBias.value = originalMaterial.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateOutlineMaterial( material, originalMaterial ) {\n\n\t\t\tif ( material.name === 'invisible' ) return;\n\n\t\t\tconst outlineParameters = originalMaterial.userData.outlineParameters;\n\n\t\t\tmaterial.fog = originalMaterial.fog;\n\t\t\tmaterial.toneMapped = originalMaterial.toneMapped;\n\t\t\tmaterial.premultipliedAlpha = originalMaterial.premultipliedAlpha;\n\t\t\tmaterial.displacementMap = originalMaterial.displacementMap;\n\n\t\t\tif ( outlineParameters !== undefined ) {\n\n\t\t\t\tif ( originalMaterial.visible === false ) {\n\n\t\t\t\t\tmaterial.visible = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial.visible = ( outlineParameters.visible !== undefined ) ? outlineParameters.visible : true;\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.transparent = ( outlineParameters.alpha !== undefined && outlineParameters.alpha < 1.0 ) ? true : originalMaterial.transparent;\n\n\t\t\t\tif ( outlineParameters.keepAlive !== undefined ) cache[ originalMaterial.uuid ].keepAlive = outlineParameters.keepAlive;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.transparent = originalMaterial.transparent;\n\t\t\t\tmaterial.visible = originalMaterial.visible;\n\n\t\t\t}\n\n\t\t\tif ( originalMaterial.wireframe === true || originalMaterial.depthTest === false ) material.visible = false;\n\n\t\t\tif ( originalMaterial.clippingPlanes ) {\n\n\t\t\t\tmaterial.clipping = true;\n\n\t\t\t\tmaterial.clippingPlanes = originalMaterial.clippingPlanes;\n\t\t\t\tmaterial.clipIntersection = originalMaterial.clipIntersection;\n\t\t\t\tmaterial.clipShadows = originalMaterial.clipShadows;\n\n\t\t\t}\n\n\t\t\tmaterial.version = originalMaterial.version; // update outline material if necessary\n\n\t\t}\n\n\t\tfunction cleanupCache() {\n\n\t\t\tlet keys;\n\n\t\t\t// clear originialMaterials\n\t\t\tkeys = Object.keys( originalMaterials );\n\n\t\t\tfor ( let i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\toriginalMaterials[ keys[ i ] ] = undefined;\n\n\t\t\t}\n\n\t\t\t// clear originalOnBeforeRenders\n\t\t\tkeys = Object.keys( originalOnBeforeRenders );\n\n\t\t\tfor ( let i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\toriginalOnBeforeRenders[ keys[ i ] ] = undefined;\n\n\t\t\t}\n\n\t\t\t// remove unused outlineMaterial from cache\n\t\t\tkeys = Object.keys( cache );\n\n\t\t\tfor ( let i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\tconst key = keys[ i ];\n\n\t\t\t\tif ( cache[ key ].used === false ) {\n\n\t\t\t\t\tcache[ key ].count ++;\n\n\t\t\t\t\tif ( cache[ key ].keepAlive === false && cache[ key ].count > removeThresholdCount ) {\n\n\t\t\t\t\t\tdelete cache[ key ];\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcache[ key ].used = false;\n\t\t\t\t\tcache[ key ].count = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tlet renderTarget;\n\t\t\tlet forceClear = false;\n\n\t\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.OutlineEffect.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t\t}\n\n\t\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.OutlineEffect.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\t\tforceClear = arguments[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( renderTarget !== undefined ) renderer.setRenderTarget( renderTarget );\n\n\t\t\tif ( forceClear ) renderer.clear();\n\n\t\t\tif ( this.enabled === false ) {\n\n\t\t\t\trenderer.render( scene, camera );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst currentAutoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = this.autoClear;\n\n\t\t\trenderer.render( scene, camera );\n\n\t\t\trenderer.autoClear = currentAutoClear;\n\n\t\t\tthis.renderOutline( scene, camera );\n\n\t\t};\n\n\t\tthis.renderOutline = function ( scene, camera ) {\n\n\t\t\tconst currentAutoClear = renderer.autoClear;\n\t\t\tconst currentSceneAutoUpdate = scene.autoUpdate;\n\t\t\tconst currentSceneBackground = scene.background;\n\t\t\tconst currentShadowMapEnabled = renderer.shadowMap.enabled;\n\n\t\t\tscene.autoUpdate = false;\n\t\t\tscene.background = null;\n\t\t\trenderer.autoClear = false;\n\t\t\trenderer.shadowMap.enabled = false;\n\n\t\t\tscene.traverse( setOutlineMaterial );\n\n\t\t\trenderer.render( scene, camera );\n\n\t\t\tscene.traverse( restoreOriginalMaterial );\n\n\t\t\tcleanupCache();\n\n\t\t\tscene.autoUpdate = currentSceneAutoUpdate;\n\t\t\tscene.background = currentSceneBackground;\n\t\t\trenderer.autoClear = currentAutoClear;\n\t\t\trenderer.shadowMap.enabled = currentShadowMapEnabled;\n\n\t\t};\n\n\t\t/*\n\t\t * See #9918\n\t\t *\n\t\t * The following property copies and wrapper methods enable\n\t\t * OutlineEffect to be called from other *Effect, like\n\t\t *\n\t\t * effect = new StereoEffect( new OutlineEffect( renderer ) );\n\t\t *\n\t\t * function render () {\n\t\t *\n\t \t * \teffect.render( scene, camera );\n\t\t *\n\t\t * }\n\t\t */\n\t\tthis.autoClear = renderer.autoClear;\n\t\tthis.domElement = renderer.domElement;\n\t\tthis.shadowMap = renderer.shadowMap;\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn renderer.getPixelRatio();\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\trenderer.setPixelRatio( value );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn renderer.getSize( target );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\trenderer.setSize( width, height, updateStyle );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\trenderer.setViewport( x, y, width, height );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\trenderer.setScissor( x, y, width, height );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\trenderer.setScissorTest( boolean );\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t};\n\n\t}\n\n}\n\nexport { OutlineEffect };\n","/**\r\n * 预览模型\r\n */\r\n// import * as THREE from 'three'\r\n// const vertexShader = `\r\n// \t\tvarying vec3 vPosition;\r\n// \t\tvarying vec2 vUv;\r\n// \t\tvoid main() { \r\n// \t\t\tvUv = uv; \r\n// \t\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n// \t\t\tgl_Position = projectionMatrix * mvPosition;\r\n// \t\t}\r\n// \t\t`;\r\n// const getMesh = (fragmentShader) => {\r\n//     const geometry = new THREE.PlaneGeometry(20, 20);\r\n//     const material = new THREE.ShaderMaterial({\r\n//         uniforms: {\r\n//             iTime: {\r\n//                 value: 0\r\n//             },\r\n//             iResolution: {\r\n//                 value: new THREE.Vector2(1900, 1900)\r\n//             },\r\n//             iChannel0: {\r\n//                 value: window.iChannel0\r\n//             },\r\n//             iChannel1: {\r\n//                 value: window.iChannel1\r\n//             },\r\n\r\n//         },\r\n//         side: 2,\r\n//         depthWrite: false,\r\n//         transparent: true,\r\n//         vertexShader: vertexShader,\r\n//         fragmentShader: fragmentShader\r\n//     })\r\n//     const plane = new THREE.Mesh(geometry, material);\r\n//     plane.rotation.x = -Math.PI / 2;\r\n//     return plane;\r\n// }\r\nexport default {\r\n    shader1() {\r\n        let fragmentShader = `\r\n        uniform float iTime;\r\n        uniform sampler2D tDiffuse;\r\n        varying vec2 vUv;\r\n        varying vec3 vPosition;\r\n        uniform vec3 color;\r\n        void main(){\r\n            vec4 texture = texture2D(tDiffuse, vUv);\r\n            float x = vPosition.x;\r\n            float lighty = -x*1.2 + iTime;\r\n            float alpha = abs(vPosition.y - lighty) / 5.0;\r\n\r\n            if(alpha < 0.1){\r\n                float a = 1.0 - alpha / 0.1;\r\n                float enda = smoothstep(0.0,1.0,a) + 0.8;\r\n                gl_FragColor = texture* enda;\r\n            }else{\r\n                gl_FragColor = texture * 0.8;\r\n            }\r\n        }\r\n        `\r\n        return fragmentShader\r\n    },\r\n    shader2() {\r\n        let fragmentShader = `\r\n        uniform float iTime;\r\n        uniform sampler2D tDiffuse;\r\n        varying vec2 vUv;\r\n        varying vec3 vPosition;\r\n        uniform vec3 color;\r\n        void main(){\r\n            vec4 texture = texture2D(tDiffuse, vUv);\r\n            float x = vPosition.x;\r\n            float lighty = -x*1.2 + iTime;\r\n            float alpha = abs(vPosition.y - lighty);\r\n\r\n            if(alpha < 0.1){\r\n                float a = 1.0 - alpha / 0.1;\r\n                float enda = smoothstep(0.0,1.0,a) + 1.0;\r\n                gl_FragColor = texture* enda;\r\n            }else{\r\n                gl_FragColor = texture * 1.0;\r\n            }\r\n        }\r\n        `\r\n        return fragmentShader\r\n    }\r\n}","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=style&index=1&lang=css&\""],"sourceRoot":""}